{
	"@version": [[${zapVersion}]],
	"@generated": [[${generatedString}]],
	"site":[ [#th:block th:each="site, siteState: ${reportData.sites}"][#th:block th:if="${! siteState.first}"],[/th:block]
		{
			"@name": "[(${helper.legacyEscapeText(site, true)})]",
			"@host": "[(${helper.legacyEscapeText(helper.getHostForSite(site), true)})]",
			"@port": "[(${helper.getPortForSite(site)})]",
			"@ssl": "[(${helper.isSslSite(site)})]",
			"alerts": [ [#th:block th:each="alert, alertState: ${helper.getAlertsForSite(alertTree, site)}" th:with="instances=${helper.getAlertInstancesForSite(alertTree, site, alert.name, alert.risk)}"]
				{
					"pluginid": "[(${alert.pluginId})]",
					"alertRef": "[(${alert.alertRef})]",
					"alert": "[(${helper.legacyEscapeText(alert.name, true)})]",
					"name": "[(${helper.legacyEscapeText(alert.name, true)})]",
					"riskcode": "[(${alert.risk})]",
					"confidence": "[(${alert.confidence})]",
					"riskdesc": "[(${helper.legacyEscapeText(helper.getRiskString(alert.risk) + ' (' + helper.getConfidenceString(alert.confidence) + ')', true)})]",
					"desc": "[(${helper.legacyEscapeParagraph(alert.description, true)})]",
					"instances":[ [#th:block th:each="instance, instState: ${instances}" th:unless="${ instState.index > 3}"]
						[#th:block th:if="${! instState.first} and ${instState.index} != 3"],[/th:block]
						[#th:block th:unless="${ instState.index == 3 }"]
						{
							"uri": "[(${helper.legacyEscapeText(instance.uri, true)})]",
							"method": "[(${helper.legacyEscapeText(instance.method, true)})]",
							"status-code": [(${instance.message.responseHeader.statusCode})],
							"param": "[(${helper.legacyEscapeText(instance.param, true)})]",
							"attack": "[(${helper.legacyEscapeText(instance.attack, true)})]",
							"evidence": "[(${helper.legacyEscapeText(instance.evidence, true)})]",
							"request-header": "[(${helper.legacyEscapeText(instance.message.requestHeader, true)})]",
							"response-header": "[(${helper.legacyEscapeText(instance.message.responseHeader, true)})]"
						}[/th:block]
						[#th:block th:if="${ instState.index == 3 }"],	
						{
							"uri": "#RESULTS WHERE TRIMMED DUE TO SIZE [(${instances.size})]",
							"method": "123",
							"status-code": 0,
							"param": "123",
							"attack": "[(${instances.size})]",
							"evidence": "123",
							"request-header": "123",
							"response-header": "123"
						}[/th:block]
					[/th:block]
					],
					"count": "[(${instances.size})]",
					"solution": "[(${helper.legacyEscapeParagraph(alert.solution, true)})]",
					"otherinfo": "[(${helper.legacyEscapeParagraph(alert.otherinfo, true)})]",
					"reference": "[(${helper.legacyEscapeParagraph(alert.reference, true)})]",
					"cweid": "[(${alert.cweid})]",
					"wascid": "[(${alert.wascid})]",
					"sourceid": "[(${alert.sourceHistoryId})]"
				}[#th:block th:if="${! alertState.last}"],[/th:block][/th:block]
			]
		}[/th:block]
	]
}
